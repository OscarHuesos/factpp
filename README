Put the text here that is used as package description.
fact to ubuntu 16.04:

Con root 6.14/6.12

%root 6  (6.12)
En la carpeta donde se piensa instalar root 6 y se descargo el source:
tar -xvzf root_v6.12.04.source.tar.gz 
mkdir build
mkdir root-install
cd root-install
pwd
cd ..
cd root
pwd
cd ..
cd build
si puedes construir con:
 -Dbuiltin_zlib=ON
probar python dinamico:
sudo cmake -DCMAKE_INSTALL_PREFIX=/opt/CERN/root/root-install -DPYTHIA8_LIBRARY=/opt/CERN/pythia/v8186/lib/archive/libpythia8.so -DPYTHIA8_INCLUDE_DIR=/opt/CERN/pythia/v8186/include -DPYTHON_EXECUTABLE=/usr/local/python2.7/bin/python2.7 -DPYTHON_INCLUDE_DIR=/usr/local/python2.7/include/python2.7 -DPYTHON_LIBRARY=/usr/local/python2.7/lib/python2.7.so -DPYTHON_DIR=/usr/local/python2.7 -DVC=OFF /opt/CERN/root/root-6.12.04
o
sudo cmake -DCMAKE_INSTALL_PREFIX=/opt/CERN/root/root-install -DPYTHIA8_LIBRARY=/opt/CERN/pythia/v8186/lib/archive/libpythia8.so -DPYTHIA8_INCLUDE_DIR=/opt/CERN/pythia/v8186/include -DPYTHON_DIR=/usr/local/python2.7 -DVC=OFF /opt/CERN/root/root-6.12.04
make
make install
en caso de haber instalado python 2.7 con sudo ytener problemas irremediables apagar copilsacion con python:-Dpython=OFF



%pythia 

cd ${TOPDIR}/..
PKG=pythia
VERSION=8186
TOPDIR=/opt/CERN/${PKG}
sudo mkdir -p ${TOPDIR}
cd ${TOPDIR}
sudo wget http://home.thep.lu.se/~torbjorn/pythia8/${PKG}${VERSION}.tgz
sudo wget http://home.thep.lu.se/~torbjorn/pythia8/pythia8186.tgz
sudo tar xzf ${PKG}${VERSION}.tgz
sudo tar xzf pythia8186.tgz
cd ${PKG}${VERSION}
sudo ./configure --prefix=${TOPDIR}/v${VERSION} --enable-shared
sudo ./configure --prefix=/opt/GeantV/v8186 --enable-shared
sudo make 
sudo make install
cp .so files or modify install goal
cd lib 
sudo cp -p *.so /opt/CERN/pythia/v8186/lib/archive/
cp -p *.so /opt/GeantV/pythia8186/lib/archive/

Dependencias:
sudo apt install git
sudo apt install subversion
sudo apt-get install libv8-dev
sudo apt install doxygen

cfitsio-3.47:
tar -xvzf cfitsio-3.47.tar.gz
En la carpeta de descompresion:
./configure
make
make install


SQL++:(cuidado con previa configuracion mysql):
sudo apt install mariadb-server mariadb-client
sudo apt-get install libmysqlcppconn-dev
sudo apt-get install apparmor-utils

MOTIF:
sudo apt-get install libmotif-dev

CCfits:
tar -xvzf CCfits-2.5.tar.gz
sudo ./configure --with-cfitsio=/home/oscar/Documentos/proyectoprofe/cfitsio-3.47
sudo make 
sudo make install

QT:
sudo apt-get install qt-sdk
sudo apt install libqt4-dev libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools qt4-qmake

libnova:
Downlaod .deb from:
sudo apt-get install help2man
https://sourceforge.net/projects/libnova/postdownload
sudo dpkg -i libnova-dev_0.14.0-1_amd64.deb
sudo apt-get install -f

QWT:
sudo apt-get install libqwt-dev
sudo apt-get install libqwt5-qt4-dev

FACT++
sudo aptitude install ngspice
sudo apt install groff
svn checkout https://www.fact-project.org/svn/trunk/FACT++ fact++
mkdir install
mkdir build
cd build
cmake /home/oscar/Documentos/proyectoprofe/fact/fact++ -DCMAKE_INSTALL_PREFIX=/home/oscar/Documentos/proyectoprofe/fact/install -DCFITSIO_LIBRARY=/home/oscar/Documentos/proyectoprofe/cfitsio-3.47/lib -DCFITSIO_INCLUDE_DIR=/home/oscar/Documentos/proyectoprofe/cfitsio-3.47/include -DTOOLS_ONLY=1 -DVIEWER_ONLY=1 -DOBSERVATORY=HAWC -DROOT=ON
make 
sudo make install


MARS-ROOT:
svn checkout https://www.fact-project.org/svn/trunk/Mars
cd Mars
mkdir build
cd build
. /opt/root-6.14.04/bin/thisroot.sh
cmake -DOBSERVATORY=HAWC ..
make
dentro de build:
root


GSL bajar de:
https://ftp.gnu.org/gnu/gsl/gsl-2.6.tar.gz
cd gsl
./configure --prefix=$INSTALL_LOC
make
make check
%opcional si no copila despues:
make install





















